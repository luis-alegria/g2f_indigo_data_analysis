data <- read.csv("./genus_transpose.csv")
setwd("./g2f_indigo_data_analysis/")
data <- read.csv("./genus_transpose.csv")
library(tidyverse)
test <- data[1,]
non_zero <- test %>%
select(where(~any(.x > 0)))
test_long <- non_zero %>%
pivot_longer(!X, names_to = "genus", values_to = "read_count")
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack")
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "fill")
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "fill") +
theme(legend.position="none")
total <- ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack")
percent <- ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "fill") +
theme(legend.position="none")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(total, percent, ncol=2)
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "fill") +
coord_flip()
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "fill") +
guides(fill = guide_legend(ncol = 1))
total <- ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
guides(fill = guide_legend(ncol = 1))
grid.arrange(total, percent, ncol=2)
total <- ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
guides(fill = guide_legend(ncol = 2))
grid.arrange(total, percent, ncol=2)
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.text.x=element_blank(),
axist.text.y="Read Count") +
guides(fill = guide_legend(ncol = 2))
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
# theme(axis.text.x=element_blank(),
#       axist.text.y="Read Count") +
guides(fill = guide_legend(ncol = 2))
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.title.x=element_blank()) +
# axist.text.y="Read Count") +
guides(fill = guide_legend(ncol = 2))
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.title.x=element_blank(),
axist.title.y="Read Count") +
guides(fill = guide_legend(ncol = 2))
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.title.x=element_blank()) +
guides(fill = guide_legend(ncol = 2)) +
xlab("Read Count")
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.title.x=element_blank()) +
guides(fill = guide_legend(ncol = 2)) +
ylab("Read Count")
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.title.x=element_blank()) +
guides(fill = guide_legend(ncol = 2)) +
ylab("Read Count") +
ggtitle("Genus Composition")
ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "fill") +
theme(legend.position="none")
install.packages("ggpubr")
library(ggpubr)
legend_obj <- get_legend(total)
View(legend_obj)
total <- ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.title.x=element_blank()) +
theme(legend.position="none") +
ylab("Read Count") +
ggtitle("Genus Composition")
grid.arrange(Total, legend_obj, percentage, ncol=3)
grid.arrange(total, legend_obj, percentage, ncol=3)
grid.arrange(total, legend_obj, percent, ncol=3)
grid.arrange(total, percent, legend_obj, ncol=3)
percent <- ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "fill") +
ylab("Read Percent") +
theme(legend.position="none")
grid.arrange(total, percent, legend_obj, ncol=3)
total <- ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "stack") +
theme(axis.title.x=element_blank()) +
theme(legend.position="none") +
ylab("Read Count")
grid.arrange(total, percent, legend_obj, ncol=3)
percent <- ggplot(test_long, aes(x=X, y=read_count, fill = genus)) +
geom_bar(stat = "identity", position = "fill") +
ylab("Read Percent") +
theme(legend.position="none", axis.title.x=element_blank())
grid.arrange(total, percent, legend_obj, ncol=3)
View(data)
View(data)
source("~/g2f_indigo_data_analysis/stacked_bars.R", echo = TRUE)
source("~/g2f_indigo_data_analysis/stacked_bars.R", echo = TRUE)
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
rlang::last_trace()
View(read_plots)
View(data)
View(data)
rlang::last_trace(drop = FALSE)
i <- 1
paste("bar", i, sep = "")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
View(plotlist)
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
source("~/g2f_indigo_data_analysis/stacked_bars.R")
View(plotlist)
length(plotlist)
source("~/g2f_indigo_data_analysis/stacked_bars.R")
View(charts)
